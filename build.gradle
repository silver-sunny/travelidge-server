plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}


repositories {
    mavenCentral()
}
tasks.named('compileJava') {
    options.compilerArgs << '-parameters'
    options.annotationProcessorPath = configurations.annotationProcessor
}
subprojects {


    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = "com.studio"
    version = "1.0-SNAPSHOT"
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'org.springframework.boot:spring-boot-starter-validation'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
        implementation 'com.oracle.database.security:oraclepki'

        implementation 'com.oracle.database.security:osdt_cert:21.3.0.0'
        implementation 'com.oracle.database.security:osdt_core:21.3.0.0'

        // QueryDSL
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

        // Encryption
        implementation 'org.mindrot:jbcrypt:0.4'
        implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

        implementation 'org.springframework.boot:spring-boot-starter-web'

        // OpenAPI / Swagger
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.1'

        implementation 'org.springframework.boot:spring-boot-starter-webflux'

        implementation 'org.springframework.boot:spring-boot-starter-data-redis'

        implementation 'com.oracle.oci.sdk:oci-java-sdk:3.38.0'
        implementation 'com.oracle.oci.sdk:oci-java-sdk-common:3.38.0'
        implementation 'com.oracle.oci.sdk:oci-java-sdk-objectstorage:3.38.0'
        implementation 'com.oracle.oci.sdk:oci-java-sdk-common-httpclient:3.38.0'
        implementation 'com.oracle.oci.sdk:oci-java-sdk-common-httpclient-choices:3.38.0'
        implementation ('com.oracle.oci.sdk:oci-java-sdk-common-httpclient-jersey3:3.37.0')

//        // Oracle OCI SDKs
//        implementation 'com.oracle.oci.sdk:oci-java-sdk-workrequests:2.8.1'
//        implementation 'com.oracle.oci.sdk:oci-java-sdk-filestorage:2.8.1'
//        implementation 'com.oracle.oci.sdk:oci-java-sdk-audit:2.8.1'
//        implementation 'com.oracle.oci.sdk:oci-java-sdk-core:2.8.1'
//        implementation 'com.oracle.oci.sdk:oci-java-sdk-database:2.8.1'
//        implementation 'com.oracle.oci.sdk:oci-java-sdk-common:2.8.1'
//        implementation 'com.oracle.oci.sdk:oci-java-sdk-objectstorage-generated:2.8.1'
//
//        // Jersey (REST 클라이언트)
//        implementation 'org.glassfish.jersey.core:jersey-client:2.34'
//        implementation 'org.glassfish.jersey.core:jersey-common:2.34'
//        implementation 'org.glassfish.jersey.ext:jersey-entity-filtering:2.34'
//        implementation 'org.glassfish.jersey.inject:jersey-hk2:2.34'
//        implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.34'
    }

}

bootJar {
    enabled = false
}
jar {
    enabled = true
}

project(':core') {
    dependencies {


    }
}

project(':api') {
    dependencies {
        implementation project(':core')
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

        // JWT
        implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
        implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
        runtimeOnly 'io.jsonwebtoken:jjwt-gson:0.12.6'


        // JSON
        implementation 'com.google.code.gson:gson:2.11.0'


    }
}

project(':batch') {
    dependencies {
        implementation project(':core')

        implementation 'org.springframework.boot:spring-boot-starter-batch'

    }
}

